<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acer.mapper.EmployeeMapper">

    <!--分页查询员工数据-->
    <select id="queryLimit" resultType="com.acer.model.Employee">
        select * from employee
        <if test="name != null and name != ''">
            where name like concat('%',#{name},'%')
        </if>
        order by create_time desc
        limit #{page},#{pageSize}
    </select>

    <!--根据id修改员工的状态-->
    <update id="updateStatus" parameterType="com.acer.model.Employee">
        update employee set status = #{status}
        where id = #{id}
    </update>


    <!--根据id查询对应的数据-->
    <select id="queryById" resultType="com.acer.model.Employee">
        select * from employee
        where id = #{id}
    </select>


    <!--修改用户数据-->
    <update id="update" parameterType="com.acer.model.Employee">
        update employee set
           username = #{username},name = #{name},phone = #{phone},sex=#{sex},id_number = #{idNumber}
        where id = #{id}
    </update>

    <!--根据用户名查询数据-->
    <select id="loginQuery" parameterType="com.acer.model.Employee" resultType="com.acer.model.Employee">
        select * from employee
        where username = #{username}
    </select>

    <!--新增用户数据-->
    <insert id="save" parameterType="com.acer.model.Employee">
        insert into employee(
           name,username,password,phone,sex,id_number,create_time,update_time,create_user,update_user)
        values(#{name},#{username},#{password},#{phone},#{sex},#{idNumber},#{createTime},#{updateTime},#{createUser},#{updateUser});
    </insert>


</mapper>